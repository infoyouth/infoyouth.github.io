name: 🎓 Daily Course Generator
on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: false
        default: 'Manual content generation'
  schedule:
    - cron: '0 1 * * *'

permissions:
  contents: write
  pull-requests: write

env:
  GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

jobs:
  generate-content:
    name: 📚 Generate Course Content
    runs-on: ubuntu-latest
    steps:
      - name: 🔍 Checkout Main Repository
        uses: actions/checkout@v4

      - name: 🔐 Checkout Private Content Repo
        uses: actions/checkout@v4
        with:
          repository: infoyouth/course-content-action
          ref: main
          token: ${{ secrets.PAT_TOKEN }}
          path: ./temp

      - name: 📦 Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-custom
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: 📦 Install Pre Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install aiofiles==24.1.0 colorlog==6.9.0
      - name: 🚀 Generate Course Content
        working-directory: ./temp
        run: |
          export PYTHONPATH=$(pwd)
          mkdir -p $GITHUB_WORKSPACE/_posts
          echo "🎯 Starting content generation process..."
          # Run the Python script to generate content and set the TOPIC value in the script
          python3 todays_course_finder.py || { echo "Failed to generate content, exiting with error code"; exit 1; }
      
          # Initialize a flag for content generation
          CONTENT_GENERATED=false
      
          # Check if any .md files were generated
          if ls *.md 1> /dev/null 2>&1; then
            echo "📄 Found generated markdown files, copying them..."
            cp *.md $GITHUB_WORKSPACE/_posts
            CONTENT_GENERATED=true
          else
            echo "🚫 No content generated for today. Skipping file copy."
          fi
      
          # Export the CONTENT_GENERATED flag so it can be used in later steps
          echo "CONTENT_GENERATED=${CONTENT_GENERATED}" >> $GITHUB_ENV
      
          # Clean up
          cd ..
          rm -rf ./temp

      - name: 📋 Process Status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Content generation completed successfully!"
          else
            echo "❌ Content generation encountered issues"
            exit 1
          fi
      
      - name: Create Branch Name and Set Date
        if: ${{ env.CONTENT_GENERATED == 'true' }}
        run: |
          CURRENT_DATETIME=$(date '+%Y-%m-%d')
          echo "CURRENT_DATETIME=${CURRENT_DATETIME}" >> $GITHUB_ENV
          BRANCH_NAME="${{ env.TOPIC }}-${CURRENT_DATETIME}"
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          TOPIC_WITH_SPACE=$(echo "${{ env.TOPIC }}" | sed 's/_/ /g')
          echo "TOPIC_WITH_SPACE=${TOPIC_WITH_SPACE}" >> $GITHUB_ENV
      
      - name: 🚀 Open Pull Request
        if: env.CONTENT_GENERATED == 'true'
        id: create_pull_request
        uses: peter-evans/create-pull-request@v7.0.5
        with:
          title: "📝 ${{ env.TOPIC_WITH_SPACE }} - Comprehensive Notes with New Insights (${{ env.CURRENT_DATETIME }}) 📥"
          body: "This PR includes generated notes created on ${{ env.CURRENT_DATETIME }}."
          committer: "Youth Innovations <info.youthinno@gmail.com>"
          author: "Youth Innovations <info.youthinno@gmail.com>"
          assignees: "project-owner"
          reviewers: DarshanBoraganve,Sanmatiboragave,shweta-borganve
          base: main
          branch: ${{ env.BRANCH_NAME }}
          labels: blog-post
          commit-message: "📝 Freshly Generated Course Content for '${{ env.TOPIC_WITH_SPACE }}' on ${{ env.CURRENT_DATETIME }} 📚✨ | Ready to Dive In!"

          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Debug Outputs
        run: |
          echo "Pull Request Branch: ${{ steps.create_pull_request.outputs.pull-request-branch }}"
          echo "Pull Request Operation: ${{ steps.create_pull_request.outputs.pull-request-operation }}"
          echo "Pull Request Head SHA: ${{ steps.create_pull_request.outputs.pull-request-head-sha }}"
          echo "Pull Request Number: ${{ steps.create_pull_request.outputs.pull-request-number }}"
          echo "Pull Request URL: ${{ steps.create_pull_request.outputs.pull-request-url }}"
      - name: 🚨 Notify Discord
        if: steps.create_pull_request.outputs.pull-request-operation == 'created'
        uses: cabrera-evil/discord-notify-action@1.0.2
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: '📢 ** ${{ env.TOPIC }} **'
          description: |
            🎉 **New PR Alert!** 🚀
            
            📝 **Topic:** ${{ env.TOPIC_WITH_SPACE }}
            
            📅 **Date:** ${{ env.CURRENT_DATETIME }}
            
            🔖 **Branch:** ${{ steps.create_pull_request.outputs.pull-request-branch }}
            
            🔢 **PR:** ${{ steps.create_pull_request.outputs.pull-request-number }}
            
            🔗 [View PR](${{ steps.create_pull_request.outputs.pull-request-url }})
            
            💬 Review, share feedback, and help improve open-source! 🌐 
          include_image: 'true'
          username: 'Youth Innovations'
          title_url: ${{ steps.create_pull_request.outputs.pull-request-url }}
