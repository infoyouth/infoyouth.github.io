name: 🎓 Daily Course Generator
on:
  workflow_dispatch:  # Manual trigger with a nice UI button
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: false
        default: 'Manual content generation'
  schedule:
    - cron: '0 3 * * *'  # Runs daily at midnight UTC

permissions:
  contents: write  # Changed to write since we'll be generating content
  pull-requests: write

jobs:
  generate-content:
    name: 📚 Generate Course Content
    runs-on: ubuntu-latest
    steps:
      - name: 🔍 Checkout Main Repository
        uses: actions/checkout@v3
        
      - name: 🔐 Checkout Private Content Repo
        uses: actions/checkout@v3
        with:
          repository: infoyouth/course-content-action
          ref: main
          token: ${{ secrets.PAT_TOKEN }}
          path: ./temp

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install transformers markdownify torch requests

      - name: 🚀 Generate Course Content
        working-directory: ./temp
        run: |
          set -x
          pwd
          mkdir -p $GITHUB_WORKSPACE/_posts
          echo "🎯 Starting content generation process..."
          chmod a+x *.py
          python3 todays_course_finder.py || echo "Failed to run the Python script"
          ls -lrth
          pwd
          cp *.md $GITHUB_WORKSPACE/_posts && cd ..
          rm -rf ./temp
          pwd
          ls -lrth
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          
  
      # Step 2: Check status of content generation process
      - name: 📋 Process Status
        if: always()  # This will run even if the previous steps fail
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Content generation completed successfully!"
            git status
          else
            echo "❌ Content generation encountered issues"
            exit 1
          fi

      # Step 3: Set up branch name and current datetime for the PR
      - name: Set up branch and datetime
        run: |
          echo "TOPIC value is: ${TOPIC}"
          CURRENT_DATETIME=$(date '+%Y-%m-%d')
          BRANCH_NAME="${TOPIC}-${CURRENT_DATETIME}"
          echo "CURRENT_DATETIME=${CURRENT_DATETIME}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          echo "Generated BRANCH_NAME: ${BRANCH_NAME}"
        env:
          TOPIC: ${{ env.TOPIC }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7.0.5
        with:
          title: "Notes generated for ${{ env.TOPIC }} on ${{ env.CURRENT_DATETIME }}"
          body: "This PR contains generated notes on ${{ env.CURRENT_DATETIME }}."
          base: main
          branch: ${{ env.BRANCH_NAME }}
          commit-message: "New blog post generated for ${{ env.TOPIC }} on ${{ env.CURRENT_DATETIME }}"
          token: ${{ secrets.GITHUB_TOKEN }}
