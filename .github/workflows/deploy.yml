name: "🚧 Build Test and Deploy"

on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: 💎 Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
          bundler-cache: true

      - name: 📦 Install Dependencies
        run: bundle install

      - name: 🛠️ Build Site
        run: bundle exec jekyll build -d "_site${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: "production"

      - name: 🔍 Test Site
        run: |
          bundle exec htmlproofer _site${{ steps.pages.outputs.base_path }} \
            --disable-external \
            --ignore-urls "/^http:\/\/127.0.0.1/,/^http:\/\/0.0.0.0/,/^http:\/\/localhost/"

      - name: 🧹 Lint Ruby Code
        run: |
          chmod +x _plugins/posts-lastmod-hook.rb
          bundle exec rubocop

      - name: 📤 Upload Site Artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: "_site${{ steps.pages.outputs.base_path }}"

  # Deployment job
  deploy:
    environment:
      name: 🌐 Youth Innovations
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'  # Only run deploy when pushing to main
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5

      - name: 📦 Check for New Files in _posts/
        id: check_new_files
        run: |
          added_files=$(git diff --name-only --diff-filter=A -- _posts/)
          if [[ -n "$added_files" ]]; then
            # Extract post titles using 'sed' and format them into a comma-separated list
            titles=$(echo "$added_files" | sed -E 's/^\d{4}-\d{2}-\d{2}-\d{2}.-(.*)\.md$/\1/' | tr '\n' ', ')
            echo "new-files=true" >> $GITHUB_ENV
            echo "NEW_POSTS=$titles" >> $GITHUB_ENV
          else
            echo "new-files=false" >> $GITHUB_ENV
          fi

  # Notify job (runs only if deploy was successful and new files were added)
  notify:
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ needs.deploy.result == 'success' && env.new-files == 'true' }}
    steps:
      - name: 📢 Notify Discord of New Posts
        uses: cabrera-evil/discord-notify-action@1.0.2
        with:
          webhook_url: ${{ secrets.DISCORD_ANNOUNCE }}
          title: "🎉 New Posts Published!"
          description: |
            🚀 **Exciting News from Youth Innovations!** 🚀
            We have just published new blog posts on our site! 🎉

            **Check out the latest topics:**
            ${{ env.NEW_POSTS }}

            📖 Visit us at [Youth Innovations](https://infoyouth.github.io) for more insightful articles and innovations!

            Thank you for your continued support! 💖
          include_image: 'true'
          username: 'Youth Innovations'
